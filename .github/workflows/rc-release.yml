# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: rc-release


on:
  push:
    branches:
      - 'release/**'

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: |
          git config --global user.email "you@example.com"
          git config --global user.name "CI"
          git fetch
      - run: npm i
      - run: npm run release -- --prerelease rc
      - run: |
          git push
          git push origin --tags

  build-app1:
    needs: update-version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{github.ref}}
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - run: npm i
      working-directory: ./app1
    - run: npm run build
      working-directory: ./app1
    - uses: actions/upload-artifact@v1
      with:
        name: app1-build
        path: ./app1/dist

  build-app2:
    needs: publish-npm-app1
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{github.ref}}
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - run: npm run build
      working-directory: ./app2
    - uses: actions/upload-artifact@v1
      with:
        name: app2-build
        path: ./app2/dist

  build-app3:
    needs: publish-npm-app1
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{github.ref}}
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - run: npm run build
      working-directory: ./app3
    - uses: actions/upload-artifact@v1
      with:
        name: app3-build
        path: ./app3/dist

  publish-npm-app1:
    needs: build-app1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v1
        with:
          name: app1-build
          path: ./app1
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        working-directory: ./app1

  publish-gpr-app1:
    needs: build-app1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@michaRedM'
      - uses: actions/download-artifact@v1
        with:
          name: app1-build
          path: ./app1
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        working-directory: ./app1

  publish-npm-app2:
    needs: build-app2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v1
        with:
          name: app2-build
          path: ./app2
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        working-directory: ./app2

  publish-gpr-app2:
    needs: build-app2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@michaRedM'
      - uses: actions/download-artifact@v1
        with:
          name: app2-build
          path: ./app2
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        working-directory: ./app2

  publish-npm-app3:
    needs: build-app3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v1
        with:
          name: app3-build
          path: ./app3
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        working-directory: ./app3

  publish-gpr-app3:
    needs: build-app3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@michaRedM'
      - uses: actions/download-artifact@v1
        with:
          name: app3-build
          path: ./app3
      - run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        working-directory: ./app3

  github-release:
    needs: 
      - publish-npm-app1
      - publish-npm-app2
      - publish-npm-app3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.ref}}
      - uses: actions/download-artifact@v1
        with:
          name: app1-build
          path: ./build/app1
      - uses: actions/download-artifact@v1
        with:
          name: app2-build
          path: ./build/app2
      - uses: actions/download-artifact@v1
        with:
          name: app3-build
          path: ./build/app3
      - name: Zip app1
        uses: thedoctor0/zip-release@master
        with:
          filename: 'release-app1.zip'
          path: ./build/app1
      - name: Zip app2
        uses: thedoctor0/zip-release@master
        with:
          filename: 'release-app2.zip'
          path: ./build/app2
      - name: Zip app3
        uses: thedoctor0/zip-release@master
        with:
          filename: 'release-app3.zip'
          path: ./build/app3
      - run: git fetch
      - run: echo "##[set-output name=tag;]$(git describe --abbrev=0)"
        id: tag-name #${{steps.tag-name.outputs.tag}}
      - run: node ./.github/workflows/extract-changelog.js
        id: changelog-entry
        env:
          VERSION: ${{steps.tag-name.outputs.tag}}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: "./CHANGELOG.md"
          prerelease: "true"
          tag_name: ${{steps.tag-name.outputs.tag}}
          files: |
            release-app1.zip
            release-app2.zip
            release-app3.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}